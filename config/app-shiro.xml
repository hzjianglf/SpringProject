<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">
 <!-- Realm实现 -->
 <bean id="userRealm" class="com.xs.demo.shiro.UserRealm" />
 <!-- 会话ID生成器 -->
 <bean id="sessionIdGenerator"
  class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />
 <!-- 会话Cookie模板 -->
 <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
  <constructor-arg value="sid" />
  <property name="httpOnly" value="true" />
  <property name="maxAge" value="180000" />
 </bean>
 <!-- 会话DAO -->
 <bean id="sessionDAO"
  class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
  <property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
  <property name="sessionIdGenerator" ref="sessionIdGenerator" />
 </bean>
 <!-- 会话验证调度器 -->
 <bean id="sessionValidationScheduler"
  class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
  <property name="sessionValidationInterval" value="1800000" />
  <property name="sessionManager" ref="sessionManager" />
 </bean>
 <!-- 会话管理器 -->
 <bean id="sessionManager"
  class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
  <property name="globalSessionTimeout" value="1800000" />
  <property name="deleteInvalidSessions" value="true" />
  <property name="sessionValidationSchedulerEnabled" value="true" />
  <property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
  <property name="sessionDAO" ref="sessionDAO" />
  <property name="sessionIdCookieEnabled" value="true" />
  <property name="sessionIdCookie" ref="sessionIdCookie" />
 </bean>
 <!-- 安全管理器 -->
 <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
  <property name="realm" ref="userRealm" />
 <!--  <property name="sessionMode" value="native"/>  -->
  <property name="sessionManager" ref="sessionManager" />
 </bean>
 <!-- 重写form 登录验证 -->
 <bean id="formAuthenticationFilter"
  class="com.xs.demo.shiro.MyFormAuthenticationFilter">
<!--   class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter"> -->
  <property name="usernameParam" value="username" />
  <property name="passwordParam" value="password" />
   <!-- <property name="rememberMeParam" value="rememberMe"/>  记住我 -->
 </bean>
 <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
  <property name="securityManager" ref="securityManager" />
   <property name="loginUrl" value="/login.jsp" /><!--  -->
     <property name="successUrl" value="/index.jsp" />  
     <!-- <property name="successUrl" value="/user/index" /> -->  
   <property name="unauthorizedUrl" value="/system/unauthorized.jsp"></property> 
  <property name="filters">
   <map>
    <entry key="authc" value-ref="formAuthenticationFilter"></entry>
   </map>
  </property>
  <property name="filterChainDefinitions">
   <value>
   <!-- 权限设置跟顺序有关   依次执行以下权限验证  -->
    <!-- /login.jsp = authc -->
    /login.jsp = authc<!-- 登陆页面需要 authc 过滤器验证  -->
    /logout = logout<!-- 默认登出操作 -->
    /user/index=roles[manager],perms[user:show]<!-- 只有拥有manger角色以及权限user:create的用户可以修改 -->
     /user/gotoAdd=roles[manager],perms[user:create] <!-- 只有拥有manger角色以及权限user:create的用户可以修改 -->
     <!-- 删除方法为  ajax请求 无法跳转到 未授权页面 -->
    /user/delete=roles[manager],perms[user:delete]<!-- 只有拥有manger角色以及权限user:delete的用户可以修改 -->
    /user/gotoModify=roles[manager],perms[user:update]<!-- 只有manger角色以及权限user:update可以修改 -->
    /** = user	<!--所有目录只允许登录的用户 -->
   </value>
  </property>
 </bean>
 <!-- Shiro生命周期处理器 -->
 <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>